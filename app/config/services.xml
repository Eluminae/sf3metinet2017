<?xml version="1.0" ?>

<container xmlns="http://symfony.com/schema/dic/services"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">

    <services>
        <service id="repositories.accommodations" alias="repositories.accommodations.dbal" />
        <service id="repositories.accommodations.in_memory"
                 class="AppBundle\Repositories\InMemoryAccommodationRepository">
        </service>

        <service id="repositories.accommodations.dbal" class="AppBundle\Repositories\DbalAccommodationRepository">
            <argument type="service" id="doctrine.dbal.default_connection" />
        </service>

        <service id="repositories.reservations" alias="repositories.reservations.dbal" />
        <service id="repositories.reservations.dbal" class="AppBundle\Repositories\DbalReservationRepository">
            <argument type="service" id="doctrine.dbal.default_connection" />
        </service>

        <service id="repositories.reservation_requests" alias="repositories.reservation_requests.dbal" />
        <service id="repositories.reservation_requests.dbal" class="AppBundle\Repositories\DbalReservationRequestRepository">
            <argument type="service" id="doctrine.dbal.default_connection" />
        </service>

        <service id="repositories.customers" alias="repositories.customers.dbal" />
        <service id="repositories.customers.dbal" class="AppBundle\Repositories\DbalCustomerRepository">
            <argument type="service" id="doctrine.dbal.default_connection" />
        </service>
        <service id="security.customers_provider" alias="repositories.customers" />

        <service id="repositories.hosts" alias="repositories.hosts.dbal" />
        <service id="repositories.hosts.dbal" class="AppBundle\Repositories\DbalHostRepository">
            <argument type="service" id="doctrine.dbal.default_connection" />
        </service>
        <service id="security.hosts_provider" alias="repositories.hosts" />

        <service id="sign_up" class="AppBundle\Services\UserSignUp">
            <argument type="service">
                <service class="Symfony\Component\Security\Core\Encoder\PasswordEncoderInterface">
                    <factory service="security.encoder_factory" method="getEncoder" class="Symfony\Component\Security\Core\Encoder\EncoderFactory" />
                    <argument>AppBundle\Models\Customer</argument>
                </service>
            </argument>
            <argument type="service" id="repositories.customers" />
            <argument type="service" id="repositories.hosts" />
        </service>

        <service id="reservations" class="AppBundle\Services\ReservationService">
            <argument type="service" id="repositories.reservations" />
            <argument type="service" id="repositories.reservation_requests" />
            <argument type="service" id="app.mailer" />
            <argument type="service" id="app.mailer.message_factory" />
        </service>

        <service id="password_reset" class="AppBundle\Services\PasswordReset">
            <argument type="service" id="app.mailer" />
            <argument type="service">
                <service class="AppBundle\Services\SimpleTokenGenerator" />
            </argument>
            <argument type="service">
                <service class="Symfony\Component\Security\Core\Encoder\PasswordEncoderInterface">
                    <factory service="security.encoder_factory" method="getEncoder" class="Symfony\Component\Security\Core\Encoder\EncoderFactory" />
                    <argument>AppBundle\Models\Customer</argument>
                </service>
            </argument>
            <argument type="service" id="repositories.customers" />
        </service>

        <service id="app.mailer" alias="app.mailer.fake" />

        <service id="app.mailer.fake" class="AppBundle\Services\FakeMailer">
            <argument type="service" id="logger" />
            <argument type="service" id="templating" />
        </service>

        <service id="app.mailer.swift" class="AppBundle\Services\SwiftMailer">
            <argument type="service" id="mailer" />
        </service>

        <service id="app.mailer.message_factory" class="AppBundle\Services\MessageFactory">
            <argument>%mailer_default_from%</argument>
        </service>

        <service id="twig.extension.intl" class="Twig_Extensions_Extension_Intl">
            <tag name="twig.extension" />
        </service>

    </services>

</container>
